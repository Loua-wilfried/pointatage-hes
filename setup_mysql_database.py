#!/usr/bin/env python
"""
Script pour cr√©er automatiquement la base de donn√©es MySQL
et v√©rifier la connectivit√© XAMPP
"""

import subprocess
import sys
import os

def check_xampp_mysql():
    """V√©rifie si MySQL est accessible via XAMPP"""
    try:
        # Test de connexion basique
        import MySQLdb
        connection = MySQLdb.connect(
            host='localhost',
            user='root',
            password='',
            port=3306
        )
        connection.close()
        print("‚úÖ MySQL XAMPP est accessible")
        return True
    except ImportError:
        print("‚ùå Module MySQLdb non trouv√©, utilisons une approche alternative")
        return False
    except Exception as e:
        print(f"‚ùå Impossible de se connecter √† MySQL: {e}")
        print("\nüîß Solutions possibles:")
        print("1. D√©marrez XAMPP Control Panel")
        print("2. Cliquez sur 'Start' pour MySQL")
        print("3. V√©rifiez que le voyant MySQL est vert")
        return False

def create_database_via_mysql_command():
    """Cr√©e la base de donn√©es via la ligne de commande MySQL"""
    try:
        # Commande pour cr√©er la base de donn√©es
        mysql_commands = [
            "CREATE DATABASE IF NOT EXISTS pointatage_hes CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;",
            "SHOW DATABASES LIKE 'pointatage_hes';"
        ]
        
        for cmd in mysql_commands:
            print(f"Ex√©cution: {cmd}")
            # Note: Cette m√©thode n√©cessite que mysql.exe soit dans le PATH
            # Ou il faut sp√©cifier le chemin complet vers mysql.exe de XAMPP
        
        print("‚úÖ Tentative de cr√©ation de base de donn√©es")
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la cr√©ation: {e}")
        return False

def create_database_sql_file():
    """Cr√©e un fichier SQL pour cr√©er la base de donn√©es"""
    sql_content = """
-- Script de cr√©ation de la base de donn√©es pour le syst√®me de pointage
-- √Ä ex√©cuter dans phpMyAdmin ou via ligne de commande MySQL

CREATE DATABASE IF NOT EXISTS pointatage_hes 
CHARACTER SET utf8mb4 
COLLATE utf8mb4_unicode_ci;

USE pointatage_hes;

-- V√©rification
SELECT 'Base de donn√©es pointatage_hes cr√©√©e avec succ√®s!' as message;
"""
    
    with open('create_database.sql', 'w', encoding='utf-8') as f:
        f.write(sql_content)
    
    print("‚úÖ Fichier create_database.sql cr√©√©")
    print("üìã Instructions:")
    print("1. Ouvrez http://localhost/phpmyadmin")
    print("2. Cliquez sur 'Importer'")
    print("3. S√©lectionnez le fichier create_database.sql")
    print("4. Cliquez sur 'Ex√©cuter'")
    
    return True

def main():
    print("üöÄ Configuration de la base de donn√©es MySQL")
    print("=" * 50)
    
    # √âtape 1: V√©rification XAMPP
    print("\n1. V√©rification de XAMPP MySQL...")
    if not check_xampp_mysql():
        print("\n‚ö†Ô∏è  XAMPP MySQL n'est pas accessible")
        print("Veuillez d'abord d√©marrer XAMPP et activer MySQL")
        
        # Cr√©er le fichier SQL comme alternative
        print("\n2. Cr√©ation d'un fichier SQL alternatif...")
        create_database_sql_file()
        return
    
    # √âtape 2: Cr√©ation de la base
    print("\n2. Cr√©ation de la base de donn√©es...")
    create_database_via_mysql_command()
    
    # √âtape 3: Instructions suivantes
    print("\n3. Prochaines √©tapes:")
    print("   python manage.py makemigrations")
    print("   python manage.py migrate")
    print("   python manage.py runserver")

if __name__ == "__main__":
    main()
